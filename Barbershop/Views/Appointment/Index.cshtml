@model Barbershop.Models.ViewModels.AppointmentVM
@using System.Globalization

<!DOCTYPE html>
<html>
<head>
    <title>Запис до майстра</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        .selectedItem
        {
        background-color: #FFEBA7;
        color: #1F2029;
            transition: background-color .5s, color .5s;
        }

        .notSelectedItem {
            background-color: #1F2029;
            color: #FFEBA7;
            transition: background-color .5s, color .5s;
        }
    </style>
</head>
<body>
    <form method="post">
    <div class="section">
            <div class="container text-center p-3 col-md-8 col-lg-6 rounded" style="background-color: #1F2029;">
            <div class="row full-height justify-content-center">
                <div class="col-12 text-center align-self-center">
                    <div class="section pb-5 pt-5 pt-sm-2 text-center">
                  <h3 class="mb-5 p-2" style="color: #FFEBA7; border:solid; border-width: 2px; display: inline-block">Запис до барбера</h3>
                        <h6 class="mb-0 pb-3"><span style="color: #FFEBA7">Деталі запису </span><span style="color: #FFEBA7">Деталі клієнта</span></h6>
                        <input class="checkbox" type="checkbox" id="reg-log" name="reg-log" />
                        <label for="reg-log"></label>
                        <div class="card-3d-wrap mx-auto">
                            <div class="card-3d-wrapper mt-3">
                                <div class="card-front" style="font-size: 16px">
                                    <div class="center-wrap">
                                        <div class="section text-center">
                                            <div class="form-group">
                                                    <h3 class="mt-2" style="color: #FFEBA7">Барбер</h3>
                                                <div class="custom-select">
                                                    <input type="button" class="btn" id="selectedBarber" />
                                                    <select asp-for="@Model.Appointment.BarberId" asp-items="@Model.Barbers" style="display: none" type="text" id="barberId">
                                                        <option value="0" selected>-Оберіть барбера-</option>
                                                    </select>
                                                </div>                                                
                                            <div class="form-group mt-4">
                                                <div class="">
                                                    <h3 style="color: #FFEBA7">Дата та час запису</h3>
                                                    <button type="button" class="btn btn-dark" id="searchDate">Знайти дату для запису</button>
                                                    <button type="button" class="btn btn-dark m-3" id="searchButton">Знайти час для запису</button>
                                                </div>
                                            </div>
                                            <div class="form-group mt-2">
                                                    <div id="services" style="justify-content: center">
                                                        <h3 style="color: #FFEBA7">Послуги</h3>
                                                        <button type="button" class="btn btn-dark" id="selectServicesButton">Обрати послуги</button>

                                                        <input asp-for="@Model.Appointment.TotalPrice" readonly id="Price" class="form-control-sm" style="display:none" />

                                                        <input asp-for="@Model.Appointment.EndTime" type="time" class="form-control-sm" style="display:none" readonly id="EndTime" />

                                                        <select id="choosenServices" asp-for="@Model.ServicesIds" asp-items="@(Model.Services.Select(s => new SelectListItem {Text = s.serviceName, Value = s.Id.ToString()}))" style="display: none" class="form-control" multiple></select>
                                                        <span asp-validation-for="@Model.ServicesIds" class="text-danger"></span>
                                                    </div>
                                            </div>
                                            <a href="#" class="btn mt-4">Перейти до оформлення</a>
                                        </div>
                                    </div>
                                </div>
                                </div>
                                    <div class="card-back" style="font-size: 1rem">
                                    <div class="center-wrap">
                                        <div class="section text-center">
                                                <h4 class="mb-4 pb-3" style="color: #FFEBA7">Інформація про клієнта</h4>
                                            <div class="form-group">
                                                <input asp-for="@Model.Appointment.PhoneNumber" type="text"  class="form-style" placeholder="Номер телефону" id="logname" style="margin: 0px" autocomplete="off">
                                                <i class="input-icon uil uil-user"></i>
                                            </div>
                                            <div class="form-group mt-2">
                                                <input asp-for="@Model.Appointment.Email" type="email" class="form-style" style="margin: 0px" placeholder="E-Mail " id="logemail" autocomplete="off">
                                                <i class="input-icon uil uil-at"></i>
                                            </div>
                                            <div class="form-group mt-2">
                                                    <textarea asp-for="@Model.Appointment.Comment" type="text" class="form-style" style="margin: 0px" placeholder="Коментар до запису" id="logpass" autocomplete="off"></textarea>
                                                <i class="input-icon uil uil-lock-alt"></i>
                                            </div>
                                                <div class="form-group mt-2">
                                                    <input asp-for="@Model.Appointment.UsedPromo" type="text" class="form-style" style="margin: 0px" placeholder="Промокод (не обов'язково)" id="logemail" autocomplete="off">
                                                    <i class="input-icon uil uil-at"></i>
                                                </div>
                                            <button type = "submit" onclick="return validateInput()" class="btn mt-4">Записатись</button>
                                        </div>
                                    </div>
                                </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
    <div class="modal fade" id="barberModal" tabindex="-1" aria-labelledby="barberModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" >
            <div class="modal-content rounded" style="border-radius: 0rem; background-color:#1F2029;">
                <div class="modal-header row" style="justify-content: center;  border-bottom-color: #FFEBA7; margin: 0px">
                    <h3 class="modal-title text-center" id="barberModalLabel" style="color: #FFEBA7">Наші барбери</h3>
                    <h6 class="modal-title text-center" style="color: #FFEBA7">*Щоб подивитись відгуки про барбера, клацніть по його зображенню</h6>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body text-center">
                    <div class="row barber-selector">                        
                    </div>
                </div>
                <div class="modal-footer" style="justify-content: center; border-top-color: #FFEBA7">
                    <button type="button" id="modal-close" class="btn btn-dark rounded" style="border-radius: 0px" data-bs-dismiss="modal">На головну</button>
                </div>
            </div>
        </div>
    </div>
        <div class="modal fade" id="reviewsModal" tabindex="-1" aria-labelledby="reviewsModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content rounded" style="border-radius: 0rem; background-color:#1F2029;">
                    <div class="modal-header row" style="justify-content: center;  border-bottom-color: #FFEBA7; margin: 0px">
                        <h3 class="modal-title text-center" id="reviewsModalLabel" style="color: #FFEBA7">Відгуки про барбера</h3>
                        <h4 class="text-center" id="reviewsLabel" style="color: #FFEBA7"></h4>
                    </div>
                    <div class="modal-body">
                        <div class="reviews-selector">
                        </div>
                    </div>
                    <div class="modal-footer" style="justify-content: center; border-top-color: #FFEBA7">
                        <button type="button" id="modal-close" class="btn btn-dark rounded" style="border-radius: 0px" data-bs-dismiss="modal">На головну</button>
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="dateModal" tabindex="-1" aria-labelledby="dateModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <div class="modal-content" style="background-color: #1F2029">
                    <div class="modal-header row text-center" style="justify-content: center; border-bottom-color: #FFEBA7; margin: 0px">
                        <h5 class="modal-title" id="dateModalLabel" style="color: #FFEBA7">Доступні дні для запису до барберів</h5>
                    </div>
                    <div class="modal-body">
                        <div class="row" style="justify-content:center">
                            <ul id="datePicker" class="form-control text-center" style="border: none; background-color: #1F2029">
                            </ul>
                        </div>
                    </div>
                    <div class="modal-footer text-center" style="border-top-color: #FFEBA7; justify-content: center">
                        <div class="row">
                            <div id="divDateSelector">
                                <h6 style="color: #FFEBA7" for="selectedTime">Обрана дата для запису</h6>
                                <input type="date" style="border:solid; border-radius: 1px; border-color: #FFEBA7; color: #FFEBA7; text-align: center" readonly class="form-style p-1" asp-for="@Model.Appointment.Date" id="dateSelect" />
                            </div>
                            <button type="button" id="cancelDateButton" class="btn btn-secondary mt-2" data-dismiss="modal">Скасувати</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    <div class="modal fade" id="timeModal" tabindex="-1" aria-labelledby="timeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg">
            <div class="modal-content" style="background-color: #1F2029">
                <div class="modal-header row text-center" style="justify-content: center; border-bottom-color: #FFEBA7; margin: 0px">
                    <h5 class="modal-title" id="timeModalLabel" style="color: #FFEBA7"></h5>
                    <h6 id="errorStartTime" class="text-danger"></h6>
                </div>
                <div class="modal-body">
                    <div class="row" style="justify-content:center">
                        <ul id="timePicker" class="form-control text-center" style="border: none; background-color: #1F2029">
                        </ul>
                    </div>
                </div>
                <div class="modal-footer text-center" style="border-top-color: #FFEBA7; justify-content: center">
                    <div class="row">
                      <div id="divTimeSelector">
                        <h6 style="color: #FFEBA7" for="selectedTime">Обраний час для запису</h6>
                            <input style="border:solid; border-radius: 1px; border-color: #FFEBA7; color: #FFEBA7; text-align: center" readonly class="form-style p-1" asp-for="@Model.Appointment.StartTime" id="selectedTime" />
                      </div>
                        <button type="button" id="confirmTimeButton" class="btn btn-dark mt-3">Підтвердити</button>
                        <button type="button" id="cancelTimeButton" class="btn btn-secondary mt-2" data-bs-dismiss="modal">Скасувати</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="servicesModal" tabindex="-1" aria-labelledby="servicesModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content" style="background-color: #1F2029">
                <div class="modal-header row" style="justify-content: center; border-bottom-color: #FFEBA7; margin: 0px">
                    <h5 class="modal-title text-center" style="color: #FFEBA7" id="servicesModalLabel">Оберіть послуги</h5>
                    <span id="errorTime" class="text-danger text-center"></span>
                </div>
                <div class="modal-body">
                    <ul id="servicesList" class="list-group">
                        @foreach (var service in Model.Services)
                        {
                            <li name="listService" class="list-group-item my-2" style="border-color: #FFEBA7; border-top-width: 1px; border-top-left-radius: inherit; border-top-right-radius: inherit;  border-bottom-left-radius: inherit;  border-bottom-right-radius: inherit;">
                                <input style="display: none" type="checkbox" class="m-3" name="selectedServices" value="@service.Id" />
                                <span class="service-name">@service.serviceName у <span class="specName" data-trainee-name="стажера" data-barber-name="барбера" data-senior-name="топ-барбера"></span></span> - <span class="service-price"></span> - <span class="service-duration"></span>
                            </li>
                        }
                    </ul>
                </div>
                <div class="modal-footer" style="border-top-color: #FFEBA7">
                    <div class="col-12">
                        <span style="color: #FFEBA7">Обрано послуг на суму: </span><span style="color: #FFEBA7" readonly id="totalPrice"></span>
                    </div>
                    <div class="col-12">
                        <span style="color: #FFEBA7">Загальна тривалість послуг: </span><span style="color: #FFEBA7" readonly id="totalDuration"></span>
                    </div>
                    <div class="col-12">
                        <button type="button" class="btn btn-dark form-control" id="addServicesButton">Додати послуги</button>
                        <button type="button" class="btn btn-secondary form-control mt-1" data-bs-dismiss="modal">Закрити</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </form>
    
    @{
        <partial name="_ValidationScriptsPartial" />
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    }

    <script>
        $(document).ready(function () {


            let testReview = $('#testReview').val();

            $('#testButtonReview').click(function() {
                $.ajax({
                    url: '/Appointment/GetBarberReviews',
                    type: 'GET',
                    data: {"barberId": testReview},
                    success: function(response)
                    {
                        if(response.success)
                        {

                        }
                    }
                });
            });


            if($('#dateSelect').val().toString() === '0001-01-01')
            {
                $('#divDateSelector').addClass('d-none');
            }

            else
            {
                $('#divDateSelector').removeClass('d-none');
            }

            $('#searchDate').click(function () {
                $('#dateModal').modal('show');

                var testDate = $('#dateTest').val();

                var dateIdentificators = [];


                $.ajax({
                    url: '@Url.Action("GetAvaliableDate", "Appointment")',
                    type: 'POST',
                    data: { "barberId": $('#barberId').val() },
                    success: function (response) {
                        if (response.success) {
                            var barbersDates = response.barbersDates;
                            var barbersIds = response.barbersIds;
                            var barbersNames = response.barbersNames;

                            var datePicker = $('#datePicker');

                            let containerDate = '';

                            for (let i = 0; i < barbersIds.length; i++) {
                                let date = new Date(barbersDates[i]);
                                let formattedDate = date.toLocaleDateString();

                                if (i > 0 && barbersIds[i] !== barbersIds[i - 1]) {
                                    containerDate += '<h5 class="p-1" style="color: #FFEBA7; border:solid; border-radius: 1px; border-color: #FFEBA7; color: #FFEBA7; text-align: center">' + barbersNames[i] + '<h6>';
                                } else if (i === 0) {
                                    containerDate += '<h5 class="p-1" style="color: #FFEBA7; border:solid; border-radius: 1px; border-color: #FFEBA7; color: #FFEBA7; text-align: center"">' + barbersNames[i] + '<h6>';
                                }

                                if(testDate > 0)
                                {
                                    $('#dateModalLabel').text('Доступні дні для запису до барбера - ' + barbersNames[0]);
                                }

                                dateIdentificators.push(barbersIds[i]);

                                let dateElement = '<input readonly class="btn select-date m-3" value = "'+ formattedDate +'" />';
                                containerDate += dateElement;

                                datePicker.html(containerDate);

                                $('.select-date').each(function (index) {
                                    $(this).data('barber-id', dateIdentificators[index]);
                                    $(this).data('barber-name', barbersNames[index]);
                                    $(this).data('barber-date', barbersDates[index]);
                                });

                            }
                        } else {
                            datePicker.html(response.message);
                        }
                    }
                });

            });

            var dateSelect = $('#dateSelect');

            $(document).on('click', '.select-date', function() {
                let idBarber = $(this).data('barber-id');
                let nameBarber = $(this).data('barber-name');
                dateSelect = $(this).data('barber-date');
                let today = new Date(dateSelect);
                let dd = today.getDate();
                let mm = today.getMonth() + 1;
                let yyyy = today.getFullYear();

                if (dd < 10) {
                    dd = '0' + dd;
                }

                if (mm < 10) {
                    mm = '0' + mm;
                }

                let dayString = yyyy + '-' + mm + '-' + dd;
                $('#dateSelect').val(dayString);
                $('#barberId').val(idBarber);
                
                setServiceInfo($('#barberId').val());

                $('#selectedBarber').val(nameBarber);
                $('#divDateSelector').removeClass('d-none');
                $('#dateModal').modal('hide');
            });

            $('#selectedTime').val('Оберіть час')

            $('#totalPrice').text('Оберіть послуги.')

            $('#totalDuration').text('Оберіть послуги.')

            var selectedBarber = $('#selectedBarber');

            var barberId = $('#barberId').val();

            $.ajax({
                url: '@Url.Action("SetSelectedBarber", "Appointment")',
                type: 'GET',
                data: { "barberId": barberId },
                success: function (response) {
                    if (response.success) {
                        selectedBarber.val(response.barberName);

                        setServiceInfo(barberId);
                    }
                    else {
                        selectedBarber.val(response.message);
                    }
                }
            });

            var identeficators = [];

            $.ajax({
                url : '@Url.Action("GetBarberInfo", "Appointment")',
                type : 'GET',
                success: function(response){
                    if(response.success)
                    {
                        let barbersIds = response.barbersIds;
                        let barbersNames = response.barbersNames;
                        let barbersWorkPositions = response.barbersWorkPositions;
                        let barbersPhotos = response.barbersPhotos;
                        let barberPath = response.barberPath;

                        let barberSelector = $('.barber-selector');

                        let container = '';

                        for(let i = 0; i < barbersIds.length; i++)
                        {
                            let name = barbersNames[i];
                            let fullName = name.split(' ');
                            let firstName = fullName[0];
                            let lastName = fullName[1];
                            let workPosition = barbersWorkPositions[i];
                            let photo = barbersPhotos[i];

                            identeficators.push(barbersIds[i]);

                            let photoPath = barberPath + photo;
                        
                            var barberElement = '<div class="col-6 col-md-4 col-lg-3">' +
                            '<div class="col-md-3">' +
                                '<div class="card mt-3" style="width: 10rem; border: 0; background-color: #1F2029">' +
                                '<img src="'+ photoPath +'" class="card-img-top rounded-circle barber-img" alt="Barber Image">' +
                                '<div class="card-body">' +
                                '<h5 style="color: #FFEBA7">' + firstName + '</h5>' +
                                '<h5 style="color: #FFEBA7">' + lastName + '</h5>' +
                                '<p class="card-text" style="color: #FFEBA7">'+ workPosition +'</p>' +
                                '<button type="button" class="btn btn-dark select-barber rounded" style="border-radius: 0"  data-barber-name="' + fullName.join(' ') + '">Обрати</button>' +
                                '</div>' +
                                '</div>' +
                                '</div>' +
                                '</div>';


                                container += barberElement;

                            barberSelector.html(container);

                            $('.select-barber').each(function (index) {
                                $(this).data('barber-id', identeficators[index]);
                            });
                            $('.barber-img').each(function(index)
                            {
                                $(this).data('barber-id', identeficators[index]);
                            }
                            );
                        }
                    }
                    else
                    {
                        console.log(response.message);
                    }

                }

            });


            $(document).on('click', '.barber-img', function () {
                let barberImgId = $(this).data('barber-id');

                $.ajax({
                    url: '@Url.Action("GetBarberReviews", "Appointment")',
                    type: 'GET',
                    data: { "barberId": barberImgId },
                    success: function (response) {
                        if (response.success) {
                            let userNames = response.userNames;
                            let rates = response.rates;
                            let comments = response.comments;
                            let dates = response.dates;
                            let reviewCount = response.reviewCount;


                            let reviewsSelector = $('.reviews-selector');

                            let container = '';

                            for(let i=0; i < parseInt(reviewCount); i++)
                            {
                                let name = userNames[i];
                                let rate = rates[i];
                                let comment = comments[i];
                                let date = dates[i];


                                var reviewElement = '<div class="card mt-1" style="width: 100%; border: 0; background-color: #1F2029">' +
                                    '<div class="card-body">' +
                                    '<h5 style="color: #FFEBA7">' + name + '</h5>' +
                                    '<h5 style="color: #FFEBA7">' + generateStars(rate) + ' - ' + date +  '</h5>' + 
                                    '<h5 class="form-style p-0" style="color: #fff">' + comment + '</h5>' +
                                    '</div>' +
                                    '</div>';

                                    container += reviewElement;

                                    reviewsSelector.html(container);


                            }

                            function generateStars(rate) {
                                let stars = '';
                                for (let i = 0; i < rate; i++) {
                                    stars += '★';
                                }
                                return stars;
                            }

                          
                            $('#reviewsModal').modal('show');
                            $('#reviewsLabel').text(response.barberName);
                        }
                        else{
                            let reviewsSelector = $('.reviews-selector');
                            reviewsSelector.html('');
                            $('#reviewsLabel').text(response.barberName);
                            reviewsSelector.html('<h4 class="text-center" style="color: #FFEBA7">' + response.message + '<h4>');
                            $('#reviewsModal').modal('show');
                        }
                    }, 
                });
            });


            $('#selectedBarber').click(function () {
                $('#barberModal').modal('show');
            });

            $('.list-group-item').each(function (){
                $(this).addClass('notSelectedItem');
            });

            $('li[name=listService]').click(function()    {
                var checkbox = $(this).find('input[name=selectedServices]');
                checkbox.prop('checked', !checkbox.prop('checked'));

                checkbox.trigger('change');
            });

            var totalPrice = 0;
            var totalDuration = 0;

            var specialization;

            var selectedServices = [];

            $(document).on('click','.select-barber',function () {

                $('#Price').val(0);

                $('#time').val('00:00:00');

                $('#EndTime').val('00:00:00');

                $('#selectedTime').val('Оберіть час')

                selectedServices = [];

                $('#totalPrice').text('Оберіть послуги.')

                $('#totalDuration').text('Оберіть послуги.')

                $('#choosenServices').empty();

                $('li[name=listService]').each(function () {
                    let check = $(this).find('input[name=selectedServices]');
                    check.prop('checked', false);
                    $(this).addClass('notSelectedItem');
                });

                barberId = $(this).data('barber-id');
                var barberName = $(this).data('barber-name');
                $('selectedBarber').data('barber-id', $(this).data('barber-id'));

                $('#selectedBarber').val(barberName);
                $('#barberId').val(barberId);

                setServiceInfo($('#barberId').val());
                              

                $('#barberModal').modal('hide');
            });

          
                var totalPriceElement = $('#totalPrice');
                var totalDurationElement = $('#totalDuration');

                $('input[name="selectedServices"]').change(function () {
                    var isChecked = $(this).is(':checked');
                    var serviceItem = $(this).closest('.list-group-item');
                    var serviceId = $(this).val();
                    var servicePriceElement = serviceItem.find('.service-price');
                    var serviceDurationElement = serviceItem.find('.service-duration');
                    var servicePrice = parseInt(servicePriceElement.data('price'));
                    var serviceTime = parseInt(serviceDurationElement.data('service-duration'));

                    if (isChecked) {
                        selectedServices.push(serviceId);
                        serviceItem.addClass('selectedItem');
                        serviceItem.removeClass('notSelectedItem');
                    } else {
                        var index = selectedServices.indexOf(serviceId);
                        if(index !== -1)
                        {
                            selectedServices.splice(index, 1);
                        }
                        serviceItem.removeClass('selectedItem');
                        serviceItem.addClass('notSelectedItem');
                    }

                    

                });


            $('#addServicesButton').click(function() {
                let errorTime = $('#errorTime');

                var getDuration;

                let choosenServicesElement = $('#choosenServices');
                choosenServicesElement.empty();

                if(selectedServices.length === 0)
                {
                    errorTime.text('Оберіть хоча б одну послугу');
                }
                else
                {

                let endTimeElement = $('#EndTime');

                let startTime = $('#selectedTime').val();

                let barberId = $('#barberId').val();

                    let scheduleDate = $('#dateSelect').val();


                                $.ajax({
                                    url: '@Url.Action("SetEndTime", "Appointment")',
                                    type: 'POST',
                                    data: { startTime: startTime, barberId: barberId, scheduleDate: scheduleDate, selectedServices: selectedServices },
                                    success: function (response) {
                                        if (response.success) {
                                            let endTime = response.endTime;
                                            endTimeElement.val(endTime);
                                            errorTime.text('');
                                            $('#servicesModal').modal('hide');

                                            for (let i = 0; i < selectedServices.length; i++) {
                                                let serviceId = selectedServices[i];
                                                let service = $('#servicesList').find('input[value="' + serviceId + '"]').closest('.list-group-item');
                                                let serviceName = service.find('.service-name').text();
                                                choosenServicesElement.append($('<option>', {
                                                    value: serviceId,
                                                    text: serviceName,
                                                    selected: true
                                                }));
                                            }

                                            errorTime.text('');
                                            let price = $('#Price');

                                            let specialization;

                                            $.ajax({
                                                url: '@Url.Action("GetWorkPostiion", "Appointment")',
                                                    type: 'GET',
                                                    data: { barberId: barberId },
                                                    success: function (response) {
                                                        if (response.success) {
                                                            specialization = response.specialization;
                                                            $.ajax({
                                                                url: '@Url.Action("CalculateTotalPrice","Appointment")',
                                                                type: 'POST',
                                                                data: { "selectedServices": selectedServices, "specialization": specialization },
                                                                success: function (response) {
                                                                    if (response.success) {
                                                                        totalPriceElement.text(response.totalPrice + ' грн');
                                                                        price.val(response.totalPrice);

                                                                        getDuration = response.totalDuration;

                                                                        var DurationHours = parseInt(getDuration.split(':')[0]);
                                                                        var DurationMinutes = parseInt(getDuration.split(':')[1]);


                                                                        var durationString;

                                                                        if (DurationHours === 0) {
                                                                            durationString = DurationMinutes + ' хв.';
                                                                        }

                                                                        if (DurationMinutes === 0) {
                                                                            durationString = DurationHours + ' год.';
                                                                        }

                                                                        if (DurationMinutes > 0 && DurationHours > 0) {
                                                                            durationString = DurationHours + ' год. ' + DurationMinutes + ' хв.';
                                                                        }

                                                                        totalDurationElement.text(durationString);

                                                                    }
                                                                    else {
                                                                        errorTime.text(response.message);
                                                                    }
                                                                }
                                                            });
                                                        }
                                                    }
                                            });

                                                                 
                                        }
                                        else {
                                            Swal.fire({
                                                icon: 'error',
                                                title: response.message,
                                                text: 'Запис до барбера на цей проміжок не доступний'
                                            });
                                        }
                                    }
                                });
   

                }                    
            });

            
            $('#selectServicesButton').click(function() {
                if ($('#selectedBarber').val().toString() === 'Оберіть барбера') {
                Swal.fire({
                    icon: 'error',
                    title: 'Не обрано барбера!',
                    text: 'Будь-ласка, оберіть барбера'
                });
                }

                else if ($('#selectedTime').val().toString() === 'Оберіть час') {
                Swal.fire({
                    icon: 'error',
                    title: 'Не обрано час для запису!',
                    text: 'Будь-ласка, оберіть час для запису до барбера'
                })
                }

                else
                {
                   $('#servicesModal').modal('show');
                }

          
            });
          

            $('#searchButton').click(function () {
                if ($('#dateSelect').val().toString() === '0001-01-01') {
                    Swal.fire({
                        icon: 'error',
                        title: 'Не обрано дату для запису!',
                        text: 'Будь-ласка, оберіть дату для вибору часу'
                    })
                }

  
                else
                {
                    var barberId = $('#barberId').val();
                let modalTitle = $('#timeModalLabel');

                $.ajax({
                    url: '@Url.Action("GetDateAndDayForAppointment", "Appointment")',
                    type: 'GET',
                    data: { "date": dateSelect },
                    success: function (response) {
                        if (response.success) {
                            modalTitle.text('Доступні години для запису на ' + response.dayOfWeek + ', ' + response.dayStr);
                        }
                    }
                });

                $.ajax({
                    url: '@Url.Action("GetAvailableTime", "Appointment")',
                    type: 'POST',
                    data: { 
                        "barberId": barberId,
                        "date": dateSelect
                    },
                    success: function (response) {
                        if (response.success) {
                            var morningTimes = response.morningTimes;
                            var dayTimes = response.dayTimes;
                            var eveningTimes = response.eveningTimes;


                            var timeOptions = '';

                            if (morningTimes.length > 0 || dayTimes.length > 0 || eveningTimes.length > 0) {
                                if (morningTimes.length > 0) {
                                    timeOptions += '<h4 class="text-center" style="color: #FFEBA7">Ранок</h4><ul style="padding-left: 0rem">';
                                    for (var i = 0; i < morningTimes.length; i++) {

                                    let morning = morningTimes[i];

                                    let morningHour = parseInt(morning.split(':')[0]);
                                    let morningMinute = parseInt(morning.split(':')[1]);

                                        let morningString = morningHour + ":" + morningMinute.toString().padStart(2, '0');
                                        timeOptions += '<input readonly class="btn btn-dark m-2 time-button" value="' + morningString + '"/>';
                                    }
                                    timeOptions += '</ul>';
                                }

                                if (dayTimes.length > 0) {
                                    timeOptions += '<h4 class="text-center" style="color: #FFEBA7">День</h4><ul style="padding-left: 0rem">';
                                    for (var i = 0; i < dayTimes.length; i++) {

                                        let day = dayTimes[i];

                                        let dayHour = parseInt(day.split(':')[0]);
                                        let dayMinute = parseInt(day.split(':')[1]);

                                        let dayString = dayHour + ':' + dayMinute.toString().padStart(2,'0');

                                        timeOptions += '<input readonly class="btn btn-dark m-2 time-button" value="' + dayString + '"/>';
                                    }
                                    timeOptions += '</ul>';
                                }

                                if (eveningTimes.length > 0) {
                                    timeOptions += '<h4 class="text-center" style="color: #FFEBA7">Вечір</h4><ul style="padding-left: 0rem">';
                                    for (var i = 0; i < eveningTimes.length; i++) {
                                        let evening = eveningTimes[i];

                                        let eveningHour = parseInt(evening.split(':')[0]);
                                        let eveningMinute = parseInt(evening.split(':')[1]);

                                        let eveningString = eveningHour + ":" + eveningMinute.toString().padStart(2, '0');

                                        timeOptions += '<input readonly class="btn btn-dark m-2 time-button"value="' + eveningString + '"/>';
                                    }
                                    timeOptions += '</ul>';
                                }
                            }
                            else {
                                timeOptions += '<p style = "color: #FFEBA7">'+ response.message +'</p>';
                            }

                            $('#timePicker').html(timeOptions);
                            $('#timeModal').modal('show');
                        } else {
                            $('#timePicker').html('<h5 class = "text-center" style = "color: #FFEBA7">' + response.message + '</h5>');
                                                        $('#timeModal').modal('show');
                        }
                    },
                    error: function () {
                        $('#result').html('<p>An error occurred</p>');
                    }
                });
                }   
            });

            $(document).on('click', '.time-button', function () {
                $('.time-button').removeClass('active');
                $(this).addClass('active');
            });

            var selectedTime = $('#selectedTime');

            var errorStartTime = $('#errorStartTime');

            $('#confirmTimeButton').click(function () {
                var time = '';
                $('.time-button').each(function () {
                    if ($(this).hasClass('active')) {
                        time = $(this).val();
                        return false;
                    }
                });

                let errorStartTime = $('#errorStartTime');



                $.ajax({
                    url: '@Url.Action("SetStartTime","Appointment")',
                    type: 'GET',
                    data: {"startTime": time, "day": $('#date').val()},
                    success: function(response)
                    {
                        if(response.success)
                        {
                            let startTime = response.startTime;
                            let timeHour = parseInt(startTime.split(':')[0]);
                            let timeMinute = parseInt(startTime.split(':')[1]);

                            let timeString = timeHour + ':' + timeMinute.toString().padStart(2, '0');
                            selectedTime.val(timeString);
                            errorStartTime.text('');
                            $('#timeModal').modal('hide');
                        }
                        else
                        {
                            Swal.fire({
                                icon: 'error',
                                title: response.message,
                                text: 'Будь-ласка, оберіть час для запису з наявних'
                            });
                        }
                    }
                });
            });

            $('#buttonPrice').click(function() {

                var testDate = $('#dateSelect').val().toString();

               var testPrice = $('#spanPrice');

                testPrice.text(testDate);

            });

            $('#cancelButton').click(function () {
                $('#timeModal').modal('hide');
            });
        });
    </script>

    <script>
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1;
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd;
        }

        if (mm < 10) {
            mm = '0' + mm;
        }

        var todayString = yyyy + '-' + mm + '-' + dd;

        $('#date').prop('min',todayString);
    </script>
    <script>
        function setServiceInfo(barberId)
        {
            $('.specName').each(function () {
                var specName = $(this);

                var traineeName = $(specName).data('trainee-name');
                var barberName = $(specName).data('barber-name');
                var seniorName = $(specName).data('senior-name');

                $.ajax(
                    {
                        url: '@Url.Action("GetWorkPostiion", "Appointment")',
                        type: 'GET',
                        data: { barberId: barberId },
                        success: function (response) {
                            if (response.success) {
                                specialization = response.specialization;

                                if (specialization === "Стажер") {
                                    specName.text(traineeName);
                                }
                                if (specialization === "Барбер") {
                                    specName.text(barberName);
                                }
                                if (specialization === "Топ-барбер") {
                                    specName.text(seniorName);
                                }
                                $('.service-price').each(function () {
                                    var servicePriceElement = $(this);
                                    let listGroupItem = $(this).closest('.list-group-item');
                                    let checkBoxService = listGroupItem.find('input[name=selectedServices]');
                                    let serviceId = checkBoxService.val();

                                    $.ajax({
                                        url: '@Url.Action("SetServicePrice", "Appointment")',
                                        type: 'GET',
                                        data: { "serviceId": serviceId, "specialization": specialization },
                                        success: function (response) {
                                            if (response.success) {

                                                var price = response.price;

                                                var duration = response.duration;

                                                var PriceService = 0;
                                                var SecretPrice = 0;

                                                PriceService = price;
                                                SecretPrice = price;
                                                servicePriceElement.text(PriceService + ' грн');

                                                servicePriceElement.data('price', SecretPrice);

                                                $('.service-duration').each(function () {
                                                    var serviceDurationElement = $(this);
                                                    var setDuration = $(this).data('service-duration', duration);


                                                    var serviceDuration = $(this).data('service-duration');

                                                    var splitDuration = parseInt(serviceDuration.split(':')[1]);
                                                    serviceDurationElement.text(splitDuration + ' хв');
                                                });

                                                totalPrice = 0;
                                                totalDuration = 0;

                                            }
                                        },
                                        error: function () {

                                        }
                                    });

                                });
                            }

                        }
                    }
                );
            });
        }
    </script>
    <script>
        function validateInput() {
            var totalPrice = $('#Price').val();
            var phoneNumber = $('#logname').val();
            var eMail = $('#logemail').val();
            var selectedBarber = $('#selectedBarber').val();

            if ($('#dateSelect').val().toString() === '0001-01-01') {
                Swal.fire({
                    icon: 'error',
                    title: 'Не обрано дату для запису!',
                    text: 'Будь-ласка, оберіть дату для вибору часу'
                })
            }

            if ($('#selectedTime').val().toString() === 'Оберіть час') {
                Swal.fire({
                    icon: 'error',
                    title: 'Не обрано час для запису!',
                    text: 'Будь-ласка, оберіть час для запису до барбера'
                })
                return false;
            }

            if (totalPrice.toString() === '0,00' || totalPrice.toString() === '0') {
                Swal.fire({
                    icon: 'error',
                    title: 'Не обрано послуги!',
                    text: 'Будь-ласка, оберіть хоча б одну послугу'
                })
                return false;
            }

            if (phoneNumber.toString() === '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Не вказано номер телефону!',
                    text: 'Будь-ласка, вкажіть Ваш номер телефону'
                })
                return false;
            }

            if (eMail.toString() === '') {
                Swal.fire({
                    icon: 'error',
                    title: 'Не вказано електронну пошту!',
                    text: 'Будь-ласка, вкажіть Ваш E-Mail'
                })
                return false;
            }


            Swal.fire({
              icon: 'success',
              title: 'Дякуємо за запис до нас!',
              text: 'Детальну інформацію про запис Ви можете знайти за вказаним Вами E-Mail',
              showConfirmButton: true,
              timer: 4000
            })

            return true;
        }
    </script>
</body>
    
</html>